#!/usr/bin/env python3
"""
Teszt script a jav√≠tott h√°tt√©r szolg√°ltat√°shoz
"""

import sys
import os

# Hozz√°ad√°s a Python path-hoz
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

def test_background_service():
    """Teszteli a jav√≠tott h√°tt√©r szolg√°ltat√°st"""
    
    print("üß™ H√°tt√©r Szolg√°ltat√°s Tesztel√©se")
    print("=" * 40)
    
    try:
        from src.utils.background_task_client import BackgroundTaskClient
        
        print("‚úÖ BackgroundTaskClient import sikeres")
        
        # Client l√©trehoz√°sa
        client = BackgroundTaskClient()
        print("‚úÖ BackgroundTaskClient l√©trehozva")
        
        # Adatb√°zis ellen≈ërz√©se
        print("\nüìä Adatb√°zis ellen≈ërz√©se...")
        
        # Tasks lek√©rdez√©se
        tasks = client.get_all_tasks()
        print(f"  Tasks: {len(tasks)} db")
        
        # Notifications lek√©rdez√©se
        notifications = client.get_notifications()
        print(f"  Notifications: {len(notifications)} db")
        
        # Service √°llapot
        service_running = client.is_service_running()
        print(f"  Service fut: {service_running}")
        
        # Teszt task l√©trehoz√°sa
        print("\nüîß Teszt task l√©trehoz√°sa...")
        
        from src.utils.background_task_service import TaskPriority
        
        test_task_id = "test_fixed_001"
        success = client.submit_excel_analysis_task(
            "test_file.xlsx",
            priority=TaskPriority.NORMAL
        )
        
        if success:
            print("‚úÖ Teszt task sikeresen bek√ºldve")
            
            # Task √°llapot lek√©rdez√©se
            task_status = client.get_task_status(test_task_id)
            if task_status:
                print(f"  Task √°llapot: {task_status['status']}")
            else:
                print("  Task √°llapot nem lek√©rdezhet≈ë")
        else:
            print("‚ùå Teszt task bek√ºld√©s sikertelen")
        
        print("\nüéâ H√°tt√©r szolg√°ltat√°s teszt sikeres!")
        return True
        
    except Exception as e:
        print(f"‚ùå Hiba: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_background_service()
    sys.exit(0 if success else 1) 